// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`select single select renders closed successfully 1`] = `
.pf-c-select__toggle-text {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.pf-c-select__toggle-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  max-width: calc(100% - 1.5rem);
  white-space: normal;
}
.pf-c-select__toggle-arrow {
  display: block;
}
.pf-c-select__toggle-arrow {
  display: block;
}
.pf-c-select__toggle {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: space-between;
  min-width: 44px;
  max-width: 100%;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  white-space: nowrap;
  cursor: pointer;
  background-color: #ffffff;
}
.pf-c-select {
  display: inline-block;
  position: relative;
  max-width: 100%;
}

<Select
  className=""
  isExpanded={false}
  placeholderText="Please choose one"
  selectOptions={null}
  selections={null}
  variant="single"
>
  <div
    className="pf-c-select"
  >
    <SelectToggle
      className=""
      iconComponent={[Function]}
      id="pf-toggle-id-0"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[Function]}
      parentRef={null}
    >
      <div
        aria-expanded={false}
        aria-haspopup="listbox"
        className="pf-c-select__toggle"
        id="pf-toggle-id-0"
        onClick={[Function]}
        onClose={[Function]}
        onKeyDown={[Function]}
        tabIndex={0}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <div
            className="pf-c-select__toggle-text"
          >
            Please choose one
          </div>
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </div>
    </SelectToggle>
  </div>
</Select>
`;

exports[`select single select renders expanded successfully 1`] = `
.pf-c-select__toggle-text {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.pf-c-select__toggle-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  max-width: calc(100% - 1.5rem);
  white-space: normal;
}
.pf-c-select__toggle-arrow {
  display: block;
}
.pf-c-select__toggle-arrow {
  display: block;
}
.pf-c-select__toggle {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: space-between;
  min-width: 44px;
  max-width: 100%;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  white-space: nowrap;
  cursor: pointer;
  background-color: #ffffff;
}
.pf-c-select__menu-item {
  display: block;
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 1rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  text-align: left;
  white-space: nowrap;
  background-color: #ededed;
  text-decoration: none;
}
.pf-c-select__menu-item {
  display: block;
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 1rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  text-align: left;
  white-space: nowrap;
  background-color: #ededed;
  text-decoration: none;
}
.pf-c-select__menu-item {
  display: block;
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 1rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  text-align: left;
  white-space: nowrap;
  background-color: #ededed;
  text-decoration: none;
}
.pf-c-select__menu-item {
  display: block;
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 1rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  text-align: left;
  white-space: nowrap;
  background-color: #ededed;
  text-decoration: none;
}
.pf-c-select__menu {
  display: block;
  position: absolute;
  z-index: 100;
  min-width: 100%;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background-color: #ffffff;
  background-clip: padding-box;
  border: 1px solid transparent;
  box-shadow: 0 0.0625rem 0.0625rem 0rem rgba(3, 3, 3, 0.05), 0 0.25rem 0.5rem 0.25rem rgba(3, 3, 3, 0.06);
}
.pf-c-select.pf-m-expanded {
  display: inline-block;
  position: relative;
  max-width: 100%;
}

<Select
  className=""
  isExpanded={true}
  placeholderText="Please choose one"
  selectOptions={null}
  selections={null}
  variant="single"
>
  <div
    className="pf-c-select pf-m-expanded"
  >
    <SelectToggle
      className=""
      iconComponent={[Function]}
      id="pf-toggle-id-1"
      isActive={false}
      isExpanded={true}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[Function]}
      parentRef={null}
    >
      <div
        aria-expanded={true}
        aria-haspopup="listbox"
        className="pf-c-select__toggle"
        id="pf-toggle-id-1"
        onClick={[Function]}
        onClose={[Function]}
        onKeyDown={[Function]}
        tabIndex={0}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <div
            className="pf-c-select__toggle-text"
          >
            Please choose one
          </div>
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </div>
    </SelectToggle>
    <SingleSelect
      className=""
      isExpanded={false}
      openedOnEnter={false}
      selected={null}
    >
      <ul
        className="pf-c-select__menu"
        role="listbox"
      >
        <SelectOption
          className=""
          index={0}
          isDisabled={false}
          key=".0"
          keyHandler={[Function]}
          onClick={[Function]}
          selected={false}
          sendRef={[Function]}
          value="Mr"
        >
          <li>
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
            >
              Mr
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          index={1}
          isDisabled={false}
          key=".1"
          keyHandler={[Function]}
          onClick={[Function]}
          selected={false}
          sendRef={[Function]}
          value="Mrs"
        >
          <li>
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
            >
              Mrs
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          index={2}
          isDisabled={false}
          key=".2"
          keyHandler={[Function]}
          onClick={[Function]}
          selected={false}
          sendRef={[Function]}
          value="Ms"
        >
          <li>
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
            >
              Ms
            </button>
          </li>
        </SelectOption>
        <SelectOption
          className=""
          index={3}
          isDisabled={false}
          key=".3"
          keyHandler={[Function]}
          onClick={[Function]}
          selected={false}
          sendRef={[Function]}
          value="Other"
        >
          <li>
            <button
              aria-selected={null}
              className="pf-c-select__menu-item"
              onClick={[Function]}
              onKeyDown={[Function]}
              role="option"
            >
              Other
            </button>
          </li>
        </SelectOption>
      </ul>
    </SingleSelect>
  </div>
</Select>
`;

exports[`select single select renders with selectOptions parameter 1`] = `
.pf-c-select__toggle-text {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.pf-c-select__toggle-wrapper {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  max-width: calc(100% - 1.5rem);
  white-space: normal;
}
.pf-c-select__toggle-arrow {
  display: block;
}
.pf-c-select__toggle-arrow {
  display: block;
}
.pf-c-select__toggle {
  display: flex;
  position: relative;
  align-items: center;
  justify-content: space-between;
  min-width: 44px;
  max-width: 100%;
  padding: 0.375rem 0.5rem 0.375rem 0.5rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #282d33;
  white-space: nowrap;
  cursor: pointer;
  background-color: #ffffff;
}
.pf-c-select {
  display: inline-block;
  position: relative;
  max-width: 100%;
}

<Select
  className=""
  isExpanded={false}
  placeholderText="Please choose one"
  selectOptions={
    Array [
      <SelectOption
        className=""
        isDisabled={false}
        onClick={[Function]}
        value="Mr"
      />,
      <SelectOption
        className=""
        isDisabled={false}
        onClick={[Function]}
        value="Mrs"
      />,
      <SelectOption
        className=""
        isDisabled={false}
        onClick={[Function]}
        value="Ms"
      />,
      <SelectOption
        className=""
        isDisabled={false}
        onClick={[Function]}
        value="Other"
      />,
    ]
  }
  selections={null}
  variant="single"
>
  <div
    className="pf-c-select"
  >
    <SelectToggle
      className=""
      iconComponent={[Function]}
      id="pf-toggle-id-2"
      isActive={false}
      isExpanded={false}
      isFocused={false}
      isHovered={false}
      isPlain={false}
      onClose={[Function]}
      onEnter={[Function]}
      onToggle={[Function]}
      parentRef={null}
    >
      <div
        aria-expanded={false}
        aria-haspopup="listbox"
        className="pf-c-select__toggle"
        id="pf-toggle-id-2"
        onClick={[Function]}
        onClose={[Function]}
        onKeyDown={[Function]}
        tabIndex={0}
        type="button"
      >
        <div
          className="pf-c-select__toggle-wrapper"
        >
          <div
            className="pf-c-select__toggle-text"
          >
            Please choose one
          </div>
        </div>
        <CaretDownIcon
          className="pf-c-select__toggle-arrow"
          color="currentColor"
          size="sm"
          title={null}
        >
          <svg
            aria-hidden={true}
            aria-labelledby={null}
            className="pf-c-select__toggle-arrow"
            fill="currentColor"
            height="1em"
            role="img"
            style={
              Object {
                "verticalAlign": "-0.125em",
              }
            }
            viewBox="0 0 320 512"
            width="1em"
          >
            <path
              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
              transform=""
            />
          </svg>
        </CaretDownIcon>
      </div>
    </SelectToggle>
  </div>
</Select>
`;
